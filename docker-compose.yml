version: '3'
services:
  #web:
    #ports:
    #- "8080:80"
  gateway:
    image: gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    command: npm run debug
    volumes:
      - ./api-gateway/dist:/server/dist
    ports:
      - "3000:3000"
      - "5858:5858"
    networks:
      - microservices-api  

  algorithmservice:
    build: ./algorithms-service/
    ports:
      - "3000"
    networks:
      - microservices-api  
  
  topicsapi:
    image: topicsapi:latest
    depends_on:
      - "postgresdb"
    build:
      context: ./topicsapi
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    environment:
      DB_CONNECTION_STRING: "host=postgresdb;port=5432;database=educationaldb;username=eduuser;password=asdqwe"
    networks:
      - microservices-api  
  
  postgresdb:
    image: postgres:latest
    ports:
      - "5432"
    restart: always
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ./dbscripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: "eduuser"
      POSTGRES_PASSWORD: "asdqwe"
      POSTGRES_DB: "educationaldb"
    networks:
      - microservices-api

  mongodb:
    image: mongo
    networks:
      - microservices-api

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - microservices-api

  ccompilerservice:
    build: ./ccompilerservice/
    ports:
      - "3002:3000"
    networks:
      - microservices-api  
  


volumes:
  db_volume:

networks:
  microservices-api:
    driver: bridge 